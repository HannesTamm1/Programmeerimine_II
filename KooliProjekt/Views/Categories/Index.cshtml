@model CategoriesIndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Categories</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<form method="get">
    <div class="form-group">
        <label class="control-label">Title</label>
        <input asp-for="Search.Keyword" class="form-control" />
    </div>
    <div class="form-group">
        <button class="btn btn-primary">Otsi</button>
        <a asp-controller="Categories" asp-action="Index" class="btn btn-primary">Reset</a>
    </div>
</form>
<!-- Categories Table -->
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Data.Results.Any())
        {
            @foreach (var item in Model.Data.Results)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="2" class="text-center">No categories found.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@(await Component.InvokeAsync<PagerViewComponent>(Model.Data))
