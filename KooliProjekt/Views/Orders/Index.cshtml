@model KooliProjekt.Models.OrdersIndexModel

@{
    ViewData["Title"] = "Orders";
}

<h1>Orders</h1>

<form asp-action="Index" method="get">
    <div class="form-group">
        <label for="title">Order Title:</label>
        <input type="text" class="form-control" id="title" name="Search.Title" value="@Model.Search?.Title" />
    </div>
    <div class="form-group">
        <label for="status">Status:</label>
        <input type="text" class="form-control" id="status" name="Search.Status" value="@Model.Search?.Status" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Search</button>
        <a asp-action="Index" class="btn btn-secondary">Clear</a>
    </div>
</form>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Status</th>
            <th>Customer Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Data.Results)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.OrderDate.ToShortDateString()</td>
                <td>@item.Status</td>
                <td>
                    @if (item.User != null)
                    {
                        @item.User.Username
                    }
                    else
                    {
                        @:No User
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@(await Component.InvokeAsync<PagerViewComponent>(Model.Data))
